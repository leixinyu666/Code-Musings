/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int getMinimumDifference(TreeNode* root) {
        vector<int> arr;
        op(root,arr);
        int re=arr[1]-arr[0];
        for(int i=1,j=2;j<arr.size();i++,j++){
            int tmp=arr[j]-arr[i];
            re=re>tmp?tmp:re;
        }
        return re;
    }
    void op(TreeNode* root,vector<int>& arr){
        if(root==NULL){
            return;
        }
        if(root->left!=NULL){
            op(root->left,arr);
        }
        arr.push_back(root->val);
        if(root->right!=NULL){
            op(root->right,arr);
        }
    }

};
