/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> pathSum(TreeNode* root, int targetSum) {
        vector<vector<int>> result;
        vector<int> arr;
        op(root,arr,0,targetSum,result);
        return result;
    }
    void op(TreeNode* root,vector<int> arr,int sum,int targetSum,vector<vector<int>>& result){
        if(root!=NULL){
            sum+=root->val;
            arr.push_back(root->val);
            if(root->left==NULL&&root->right==NULL){
                if(sum==targetSum){
                    result.push_back(arr);
                }
            }
            else{
                op(root->left,arr,sum,targetSum,result);
                op(root->right,arr,sum,targetSum,result);
            }
        }
    }
};
