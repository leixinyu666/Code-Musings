/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> findMode(TreeNode* root) {
        vector<int> result;
        op(root,result);
        int i=0,j=0;
        vector<int> fin;
        while(j<result.size()&&result[j]==result[i]){
            j++;
        }
        int count=j-i;
        fin.push_back(result[i]);
        i=j;
        while(j<result.size()){
            while(j<result.size()&&result[j]==result[i]){
                j++;
            }
            if(count<j-i){
                count=j-i;
                fin.clear();
                fin.push_back(result[i]);
            }
            else if(count==j-i){
                fin.push_back(result[i]);
            }
            i=j;
            if(j==result.size()){
                break;
            }
        }
        return fin;
    }
    void op(TreeNode* root,vector<int>& result){
        if(root==NULL){
            return;
        }
        if(root->left!=NULL){
            op(root->left,result);
        }
        result.push_back(root->val);
        if(root->right!=NULL){
            op(root->right,result);
        }
    }
};
